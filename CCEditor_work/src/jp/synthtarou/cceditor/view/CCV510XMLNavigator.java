/*
 * Copyright 2023 Syntarou YOSHIDA.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package jp.synthtarou.cceditor.view;

import jp.synthtarou.cceditor.view.common.CCFileExtensionFilter;
import jp.synthtarou.cceditor.view.common.IPrompt;
import jp.synthtarou.cceditor.view.common.CCFolderBrowser;
import jp.synthtarou.cceditor.view.common.CCPromptUtil;
import java.awt.Dimension;
import java.io.File;
import java.io.FileFilter;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;
import jp.synthtarou.cceditor.common.CCGlobalTimer;
import jp.synthtarou.cceditor.common.CCWrapDataList;
import jp.synthtarou.cceditor.view.common.MyComboBoxRenderer1;
import jp.synthtarou.cceditor.xml.CCXMLFile;
import jp.synthtarou.cceditor.xml.CCXMLFileException;
import jp.synthtarou.cceditor.xml.CCXMLNode;
import jp.synthtarou.cceditor.xml.CCXMLTreeModel;

/**
 *
 * @author Syntarou YOSHIDA
 */
public class CCV510XMLNavigator extends javax.swing.JPanel implements IPrompt<CCXMLFile> {

    CCV500XMLRoot _parent;

    /**
     * Creates new form XMLView
     */
    public CCV510XMLNavigator(CCV500XMLRoot parent) {
        initComponents();
        _parent = parent;
        jComboBoxModule.setRenderer(new MyComboBoxRenderer1());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTreeDDFile = new javax.swing.JTree();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxModule = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButtonOpenFile = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldXMLPath = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaErrorView = new javax.swing.JTextArea();

        setLayout(new javax.swing.OverlayLayout(this));

        jSplitPane1.setDividerLocation(350);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("XML View"));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jTreeDDFile.setModel(createEmptyMessage());
        jTreeDDFile.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTreeDDFileValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTreeDDFile);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jScrollPane1, gridBagConstraints);

        jLabel2.setText("Module Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel6.add(jLabel2, gridBagConstraints);

        jComboBoxModule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxModuleActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel6.add(jComboBoxModule, gridBagConstraints);

        jLabel1.setText("File Path");
        jPanel6.add(jLabel1, new java.awt.GridBagConstraints());

        jButtonOpenFile.setText("Open File");
        jButtonOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenFileActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel6.add(jButtonOpenFile, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel6.add(jLabel4, gridBagConstraints);

        jTextFieldXMLPath.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jTextFieldXMLPath, gridBagConstraints);

        jSplitPane1.setTopComponent(jPanel6);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Error View"));
        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        jTextAreaErrorView.setEditable(false);
        jTextAreaErrorView.setColumns(20);
        jTextAreaErrorView.setRows(5);
        jScrollPane2.setViewportView(jTextAreaErrorView);

        jPanel5.add(jScrollPane2);

        jSplitPane1.setBottomComponent(jPanel5);

        add(jSplitPane1);
    }// </editor-fold>//GEN-END:initComponents

    long _lastMoveSequence;

    @Override
    public JPanel getAsPanel() {
        return this;
    }

    @Override
    public String getPromptTitle() {
        return "Choose File";
    }

    @Override
    public Dimension getPromptSize() {
        return new Dimension(700, 600);
    }

    @Override
    public CCXMLFile getPromptResult() {
        return _targetDDFile;
    }

    @Override
    public boolean validatePromptResult() {
        return true;
    }

    class ViewUpdateTimer implements Runnable {

        long _sequence;

        public ViewUpdateTimer(long seq) {
            _sequence = seq;
        }

        public void run() {
            if (_lastMoveSequence != _sequence) {
                return;
            }
            updateTreeSelected();
        }
    }


    private void jTreeDDFileValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTreeDDFileValueChanged
        _lastMoveSequence++;

        CCGlobalTimer.letsCountdown(300, new ViewUpdateTimer(_lastMoveSequence));

    }//GEN-LAST:event_jTreeDDFileValueChanged

    CCXMLFile _targetDDFile;

    private void jButtonOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenFileActionPerformed
        FileFilter filter = new CCFileExtensionFilter(new String[]{".xml"});
        CCFolderBrowser chooser = new CCFolderBrowser(new File("C:/Domino144/Module"), filter);
        CCPromptUtil.showPrompt(this, chooser);
        File file = chooser.getSelectedFile();
        if (file != null) {
            if (file.isFile() == false) {
                JOptionPane.showMessageDialog(this, "Choose File");
                return;
            }
            _targetDDFile = null;
            jTextFieldXMLPath.setText("");
            jTextAreaErrorView.setText("");
            try {
                _targetDDFile = new CCXMLFile(file);
                if (_targetDDFile.countModule() < 1) {
                    jTextAreaErrorView.setText("No Module Content");
                    return;
                }
                jTextAreaErrorView.setText(_targetDDFile.getAdviceForXML());

                CCWrapDataList<CCXMLNode> listModules = _targetDDFile.listModules();
                if (listModules.size() == 0) {
                    jTreeDDFile.setModel(createEmptyMessage());
                } else {
                    jComboBoxModule.setModel(listModules);
                    CCXMLTreeModel model = new CCXMLTreeModel(_targetDDFile.getModule(0));
                    jTreeDDFile.setModel(model);
                    jTextFieldXMLPath.setText(file.getName());
                }
            } catch (CCXMLFileException ex) {
                StringBuffer text = new StringBuffer();
                String message = ex.getMessage();
                StackTraceElement[] listTrace = ex.getStackTrace();
                text.append("Error [" + message + "] StackTrace \n");
                for (int i = 0; i < listTrace.length; ++i) {
                    StackTraceElement trace = listTrace[i];
                    text.append("  @" + trace.getClassName() + ":" + trace.getMethodName());
                    text.append("\n");
                }
                jTextAreaErrorView.setText(text.toString());
            }
            jTextAreaErrorView.setCaretPosition(0);
        }
    }//GEN-LAST:event_jButtonOpenFileActionPerformed

    private void jComboBoxModuleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxModuleActionPerformed
        int sel = jComboBoxModule.getSelectedIndex();
        CCXMLTreeModel model = new CCXMLTreeModel(_targetDDFile.getModule(sel));
        jTreeDDFile.setModel(model);

    }//GEN-LAST:event_jComboBoxModuleActionPerformed

    public void updateTreeSelected() {
        TreePath selected = jTreeDDFile.getSelectionPath();
        if (selected != null) {
            Object[] path = selected.getPath();
            if (path != null && path.length > 0) {
                CCXMLNode node = (CCXMLNode) path[path.length - 1];
                _parent.setTargetNode(node);
            }

        }
    }

    public TreeModel createEmptyMessage() {
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Please Select Valid XML File");
        root.setAllowsChildren(false);
        DefaultTreeModel model = new DefaultTreeModel(root);
        return model;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonOpenFile;
    private javax.swing.JComboBox<String> jComboBoxModule;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextArea jTextAreaErrorView;
    private javax.swing.JTextField jTextFieldXMLPath;
    private javax.swing.JTree jTreeDDFile;
    // End of variables declaration//GEN-END:variables
}
