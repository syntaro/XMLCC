/*
 * Copyright 2023 Syntarou YOSHIDA.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package jp.synthtarou.cceditor.view;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jp.synthtarou.cceditor.common.CCWrapData;
import jp.synthtarou.cceditor.view.common.CCPromptUtil;
import jp.synthtarou.cceditor.view.common.CCTextPrompt;
import jp.synthtarou.cceditor.view.common.CCXMLAttributePrompt;
import jp.synthtarou.cceditor.xml.CCXMLNode;

/**
 *
 * @author Syntarou YOSHIDA
 */
public class CCV520XMLEditorForTag extends javax.swing.JPanel {

    final CCV500XMLRoot _root;

    CCXMLNode _node;

    /**
     * Creates new form DDEditorForTag
     */
    public CCV520XMLEditorForTag(CCV500XMLRoot root) {
        initComponents();
        _root = root;
    }

    public void setTargetNode(CCXMLNode node) {
        jTextFieldTagPath.setText(node.getAsPathString());
        _node = node;

        jTextAreaTextContent.setText(node.getTextContent());
        createAttributeTableModel();
    }

    public void createAttributeTableModel() {
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        model.addColumn("Name");
        model.addColumn("Value");
        for (CCWrapData<String> attr : _node._listAttributes) {
            model.addRow(new Object[]{attr.name, attr.value});
        }
        jTable1.setModel(model);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jSplitPane3 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jButtonNewChildTag = new javax.swing.JButton();
        jButtonDeleteThisTag = new javax.swing.JButton();
        jButtonDuplicateThisTag = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldTagPath = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaTextContent = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jButtonRemoveAttribute = new javax.swing.JButton();
        jButtonAddAttribute = new javax.swing.JButton();
        jButtonEditAttribute = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setLayout(new java.awt.GridBagLayout());

        jSplitPane3.setDividerLocation(200);
        jSplitPane3.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButtonNewChildTag.setText("+Create Child Tag");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButtonNewChildTag, gridBagConstraints);

        jButtonDeleteThisTag.setText("-Delete ThisTag");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jButtonDeleteThisTag, gridBagConstraints);

        jButtonDuplicateThisTag.setText("+Duplicate This Tag");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel1.add(jButtonDuplicateThisTag, gridBagConstraints);

        jLabel7.setText("Text Content");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        jPanel1.add(jLabel7, gridBagConstraints);

        jTextFieldTagPath.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jTextFieldTagPath, gridBagConstraints);

        jLabel5.setText("Tag Path in XML");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabel5, gridBagConstraints);

        jLabel2.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jLabel2, gridBagConstraints);

        jTextAreaTextContent.setEditable(false);
        jTextAreaTextContent.setColumns(20);
        jTextAreaTextContent.setRows(5);
        jTextAreaTextContent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTextAreaTextContentMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTextAreaTextContent);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane2, gridBagConstraints);

        jSplitPane3.setLeftComponent(jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Attributes"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButtonRemoveAttribute.setText("- Remove");
        jButtonRemoveAttribute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveAttributeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel2.add(jButtonRemoveAttribute, gridBagConstraints);

        jButtonAddAttribute.setText("+Add");
        jButtonAddAttribute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddAttributeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel2.add(jButtonAddAttribute, gridBagConstraints);

        jButtonEditAttribute.setText("Edit");
        jButtonEditAttribute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditAttributeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jButtonEditAttribute, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null}
            },
            new String [] {
                "Name", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane3, gridBagConstraints);

        jSplitPane3.setRightComponent(jPanel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jSplitPane3, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextAreaTextContentMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextAreaTextContentMousePressed
        if (_node == null) {
            return;
        }
        CCTextPrompt prompt = new CCTextPrompt(_node.getTextContent(), "Text Of Tag");
        CCPromptUtil.showPrompt(this, prompt);
        String result = prompt.getPromptResult();
        if (result != null) {
            _node.setTextContent(result);
            jTextAreaTextContent.setText(result);
        }
    }//GEN-LAST:event_jTextAreaTextContentMousePressed

    private void jButtonAddAttributeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddAttributeActionPerformed
        if (_node == null) {
            return;
        }
        CCXMLAttributePrompt prompt = new CCXMLAttributePrompt(_node, null, null);
        CCPromptUtil.showPrompt(this, prompt);
        CCWrapData<String> result = prompt.getPromptResult();
        if (result != null) {
            if (result.name == null || result.name.length() == 0) {
                return;
            }
            _node._listAttributes.addNameAndValue(result.name, result.value);
            createAttributeTableModel();
        }
    }//GEN-LAST:event_jButtonAddAttributeActionPerformed

    private void jButtonRemoveAttributeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveAttributeActionPerformed
        if (_node == null) {
            return;
        }
        int row = jTable1.getSelectedRow();

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String name = (String) model.getValueAt(row, 0);
        String value = (String) model.getValueAt(row, 1);

        int x = JOptionPane.showConfirmDialog(this, "Remove attrribute [" + name + "=" + value + "]", "Remove Attribute", JOptionPane.YES_NO_OPTION);

        if (x == JOptionPane.YES_OPTION) {
            int i = _node._listAttributes.indexOfName(name);
            _node._listAttributes.remove(i);
            createAttributeTableModel();
        }
    }//GEN-LAST:event_jButtonRemoveAttributeActionPerformed

    private void jButtonEditAttributeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditAttributeActionPerformed
        if (_node == null) {
            return;
        }
        int row = jTable1.getSelectedRow();

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String name = (String) model.getValueAt(row, 0);
        String value = (String) model.getValueAt(row, 1);

        CCXMLAttributePrompt prompt = new CCXMLAttributePrompt(_node, name, value);
        CCPromptUtil.showPrompt(this, prompt);
        CCWrapData<String> result = prompt.getPromptResult();
        if (result != null) {
            if (result.name == null || result.name.length() == 0) {
                return;
            }
            if (name.equals(result.name)) {
                int prevIndex = _node._listAttributes.indexOfName(name);
                _node._listAttributes.set(prevIndex, new CCWrapData(name, result.value));
            } else {
                int prevIndex = _node._listAttributes.indexOfName(name);
                _node._listAttributes.remove(prevIndex);
                _node._listAttributes.addNameAndValue(result.name, result.value);
            }
            createAttributeTableModel();
        }

    }//GEN-LAST:event_jButtonEditAttributeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddAttribute;
    private javax.swing.JButton jButtonDeleteThisTag;
    private javax.swing.JButton jButtonDuplicateThisTag;
    private javax.swing.JButton jButtonEditAttribute;
    private javax.swing.JButton jButtonNewChildTag;
    private javax.swing.JButton jButtonRemoveAttribute;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextAreaTextContent;
    private javax.swing.JTextField jTextFieldTagPath;
    // End of variables declaration//GEN-END:variables
}
